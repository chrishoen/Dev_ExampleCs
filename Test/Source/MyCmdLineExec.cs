using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.IO;
using System.Text;
using Ris;

namespace MainApp
{
    //**************************************************************************
    //**************************************************************************
    //**************************************************************************
    class MyCmdLineExec : BaseCmdLineExec
    {
        //**********************************************************************
        //**********************************************************************
        //**********************************************************************

        public MyCmdLineExec()
        {
            reset();
        }

        public override void reset()
        {
        }

        //**********************************************************************
        //**********************************************************************
        //**********************************************************************

        public override void execute(CmdLineCmd aCmd)
        {
            if (aCmd.isCmd("Init")) executeInit(aCmd);

            if (aCmd.isCmd("GO1")) executeGo1(aCmd);
            if (aCmd.isCmd("GO2")) executeGo2(aCmd);
            if (aCmd.isCmd("GO3")) executeGo3(aCmd);
            if (aCmd.isCmd("GO4")) executeGo4(aCmd);
            if (aCmd.isCmd("GO5")) executeGo5(aCmd);
            if (aCmd.isCmd("GO6")) executeGo6(aCmd);
            if (aCmd.isCmd("GO7")) executeGo7(aCmd);
            if (aCmd.isCmd("GO8")) executeGo8(aCmd);
        }

        //**********************************************************************
        //**********************************************************************
        //**********************************************************************

        public void executeInit(CmdLineCmd aCmd)
        {
        }

        //**********************************************************************
        //**********************************************************************
        //**********************************************************************

        public void executeGo1(CmdLineCmd aCmd)
        {
            DateTime tDateTime = DateTime.Now;
            Console.WriteLine("{0}", tDateTime);
        }

        //**********************************************************************
        //**********************************************************************
        //**********************************************************************

        public void executeGo2(CmdLineCmd aCmd)
        {
        }

        //**********************************************************************
        //**********************************************************************
        //**********************************************************************

        public void executeGo3(CmdLineCmd aCmd)
        {
        }

        //**********************************************************************
        //**********************************************************************
        //**********************************************************************

        public void executeGo4(CmdLineCmd aCmd)
        {
            string tX1 = "101.1";
            string tX2 = string.Intern(tX1);
            Console.WriteLine("X1 {0}", tX1);
            Console.WriteLine("X2 {0}", tX2);

            tX1 = "201.2";
            Console.WriteLine("X1 {0}", tX1);
            Console.WriteLine("X2 {0}", tX2);
        }


        //**********************************************************************
        //**********************************************************************
        //**********************************************************************
        
        public void executeGo5(CmdLineCmd aCmd)
        {
            StringBuilder tX1 = new StringBuilder("tX1");
            StringBuilder tX2 = tX1;

            Console.WriteLine("X1 {0}", tX1);
            Console.WriteLine("X2 {0}", tX2);

            tX1.Clear();
            tX1.Append("111");

            Console.WriteLine("X1 {0}", tX1);
            Console.WriteLine("X2 {0}", tX2);
        }

        //**********************************************************************
        //**********************************************************************
        //**********************************************************************

        public void executeGo6(CmdLineCmd aCmd)
        {
        }

        //**********************************************************************
        //**********************************************************************
        //**********************************************************************

        public void executeGo7(CmdLineCmd aCmd)
        {
        }

        //**********************************************************************
        //**********************************************************************
        //**********************************************************************

        public void executeGo8(CmdLineCmd aCmd)
        {
            for (int i = 1; i < 10; i++)
            {
                string tPort = string.Format("COM{0}", i);
                Console.WriteLine("{0}", tPort);
            }
        }



    }
}
